{"version":3,"sources":["contexts/ThemeContext.js","components/Todo.js","components/AllTasks.js","components/FilterButton.js","components/FilterButtons.js","components/Form.js","components/MainPage.js","components/ThemeContextProvider.js","components/ThemeSwitch.js","components/ThemeSwitchLogic.js","components/University.js","components/Universities.js","App.js","index.js"],"names":["ThemeContext","createContext","Todo","props","useState","isEditing","setIsEditing","taskChangeHandler","status","changeTaskStatus","id","Edit","className","htmlFor","text","type","defaultValue","onClick","_","name","e","preventDefault","document","querySelector","value","updateTask","View","style","fontSize","onChange","checked","deleteTask","AllTasks","filter","filterMap","role","aria-labelledby","tasks","map","item","key","FilterButton","aria-pressed","isPressed","setFilter","Form","filterList","autoComplete","textElement","addTask","nanoid","clearTasks","FILTER_MAP","all","NOT_STARTED","STARTED","COMPLETED","FILTER_NAMES","Object","keys","MainPage","useContext","theme","setTasks","useEffect","allItems","JSON","parse","localStorage","getItem","setItem","stringify","task","newTaskList","length","ThemeContextProvider","setTheme","Provider","children","ThemeSwitch","handleChange","ThemeSwitchLogic","University","country","href","link","Universities","filters","setFilters","universities","setUniversities","tokens","setTokens","fetchData","a","CancelToken","axios","source","url","get","cancelToken","token","forEach","cancel","data","console","log","iifi","placeholder","target","web_pages","App","to","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ce31f26.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst ThemeContext = createContext()\n\nexport default ThemeContext","import React , {useState} from 'react'\n\n\nexport default function Todo(props){\n\n    const [isEditing , setIsEditing] = useState(false)\n\n    const taskChangeHandler = (status) => {\n      props.changeTaskStatus(props.id , status)\n    }\n\n    const deleteTaskHandler = (e) => {\n      e.preventDefault()\n      props.deleteTask(props.id)\n    }\n\n    const updateTaskHandler = (e) => {\n      e.preventDefault()\n      const text =  document.querySelector(`#${props.id}`).value\n      if(text && typeof text === 'string'){\n        props.updateTask({id : props.id , text})\n        setIsEditing(_ => false)\n      }\n    }\n\n    const Edit = (\n      <form className=\"stack-small\">\n        <div className=\"form-group\">\n          <label className=\"todo-label\" htmlFor={props.id}>\n            New name for {props.text}\n          </label>\n          <input id={props.id} className=\"todo-text\" type=\"text\" defaultValue={props.text} />\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn todo-cancel\" onClick={_ => setIsEditing(false)}>\n            Cancel\n            <span className=\"visually-hidden\">renaming {props.name}</span>\n          </button>\n          <button type=\"submit\" onClick={updateTaskHandler} className=\"btn btn__primary todo-edit\">\n            Save\n            <span className=\"visually-hidden\">new name for {props.name}</span>\n          </button>\n        </div>\n      </form>\n  )\n  \n  const View = (\n  \n      <li className=\"todo stack-small\">\n        <div className=\"c-cb\">\n          <p style={{fontSize : '2rem'}} className=\"todo-label\">\n            {props.text}\n          </p>\n          <>\n            <input id={props.id} onChange={_ => taskChangeHandler(0)} type=\"radio\" name={props.id} checked={props.status === 0} />&nbsp; Not Started &nbsp;&nbsp;\n            <input id={props.id} onChange={_ => taskChangeHandler(1)} type=\"radio\" name={props.id} checked={props.status === 1} />&nbsp; Started &nbsp;&nbsp;\n            <input id={props.id} onChange={_ => taskChangeHandler(2)} type=\"radio\" name={props.id} checked={props.status === 2} />&nbsp; Completed  &nbsp;&nbsp;\n          </>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\" onClick={_ => setIsEditing(true)}>\n            Edit <span className=\"visually-hidden\">{props.text}</span>\n          </button>\n          <button type=\"button\" onClick={deleteTaskHandler} className=\"btn btn__danger\">\n            Delete <span className=\"visually-hidden\">{props.text}</span>\n          </button>\n        </div>\n      </li>\n  )\n     return isEditing ? Edit : View ;\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function AllTasks(props){\n    const filter = props.filterMap[props.filter]\n    return (\n        <>\n            <ul\n                role=\"list\"\n                className=\"todo-list stack-large stack-exception\"\n                aria-labelledby=\"list-heading\"\n            >\n                \n                {props.tasks.filter(filter).map(item => <Todo key={item.id} text={item.text} status={item.status} id={item.id} changeTaskStatus={props.changeTaskStatus} deleteTask={props.deleteTask} updateTask={props.updateTask} /> )\n                }\n            </ul>\n        </>\n    )\n}","import React from 'react'\n\nexport default function FilterButton(props){\n    return (\n        <button type=\"button\" aria-pressed={props.isPressed} className=\"btn toggle-btn\" aria-pressed=\"true\" onClick={_ => props.setFilter(props.name)}>\n          <span className=\"visually-hidden\">Show </span>\n          <span>{props.name}</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    )\n}","import React , {useState} from 'react'\nimport FilterButton from './FilterButton'\n\nexport default function Form(props){\n\n  \n    return (\n        <div className=\"filters btn-group stack-exception\">\n        {props.filterList.map(name => \n          <FilterButton \n          key={name}\n          name={name}\n          isPressed={name === props.filter}\n          setFilter={props.setFilter} />\n          )}\n        \n      </div>\n    )\n}","import React from 'react'\nimport {nanoid} from 'nanoid'\nexport default function Form(props){\n\n    const addClickHandler = (e) => {\n        e.preventDefault()\n        const textElement = document.querySelector('input#new-todo-input')\n        const text = textElement.value\n        if(text && typeof text === 'string'){\n            props.addTask({text , status : 0 , id : nanoid()})\n            textElement.value = \"\"\n        }\n    }\n\n    const clearClickHandler = (e) => {\n      e.preventDefault()\n      props.clearTasks()\n    }\n    return (\n        <form>\n            <h2 className=\"label-wrapper\">\n              <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n                What needs to be done?\n              </label>\n            </h2>\n            <input\n              type=\"text\"\n              id=\"new-todo-input\"\n              className=\"input input__lg\"\n              name=\"text\"\n              autoComplete=\"off\"\n            />\n            <button onClick={addClickHandler} className=\"btn btn__primary btn__lg\">\n              Add\n            </button>\n            <button onClick={clearClickHandler} className=\"btn btn__success btn__lg\">\n              Clear\n            </button>\n          </form>\n    )\n}","import React , {useContext, useEffect, useState} from 'react';\nimport ThemeContext from '../contexts/ThemeContext';\nimport AllTasks from './AllTasks'\nimport FilterButtons from './FilterButtons'\nimport Form from './Form'\n\nconst FILTER_MAP = {\n  all : () => true,\n  NOT_STARTED : item => item.status === 0,\n  STARTED : item => item.status === 1,\n  COMPLETED : item => item.status === 2,\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\n\nfunction MainPage(props) {\n\n  const [theme ,] = useContext(ThemeContext)\n\n  const [tasks , setTasks] = useState([])\n  const [filter , setFilter] = useState('all')\n\n  useEffect(() => {\n    const allItems = JSON.parse(localStorage.getItem('ALL_TASKS'))\n    allItems && setTasks(allItems) \n  } , [])\n\n\n  useEffect(() => {\n    localStorage.setItem('ALL_TASKS' , JSON.stringify(tasks))\n  } , [tasks , setTasks])\n\n\n  const clearTasks = () => {\n    setTasks([]);   \n  }\n\n  const addTask = (task) => {\n    const newTaskList = [task , ...tasks]\n    setTasks(_ => newTaskList)\n  }\n\n  const changeTaskStatus = (id , status) => {\n    const newTaskList = [...tasks].map(item => item.id === id ? {...item , status} : item)\n    setTasks(newTaskList)\n  }\n\n  const deleteTask = (id) => {\n    const newTaskList = [...tasks].filter(item => item.id !== id)\n    setTasks(newTaskList)\n  }\n\n  const updateTask = (task) => {\n    const newTaskList = [...tasks].map(item => item.id === task.id ? {...item , ...task} : item)\n    setTasks(newTaskList)\n  }\n\n\n  return (\n        <div className={`todoapp stack-large ${theme === 'dark' && 'dark'}`}>\n          <h1>TodoMatic</h1>\n          <Form addTask={addTask} clearTasks={clearTasks} />\n          <FilterButtons filterList={FILTER_NAMES} filter={filter} setFilter={setFilter} />\n          \n          <h2 id=\"list-heading\">\n            {tasks.filter(item => !item.status === 2).length} tasks remaining\n          </h2>\n          <AllTasks filterMap={FILTER_MAP} filter={filter} tasks={tasks} changeTaskStatus={changeTaskStatus} updateTask={updateTask} deleteTask={deleteTask} />\n      </div>\n  );\n}\n\nexport default MainPage;\n","import React , { useState } from 'react'\nimport ThemeContext from '../contexts/ThemeContext'\n\nexport default function ThemeContextProvider(props){\n\n    const [ theme , setTheme ] = useState('light')\n\n    return (\n        <>\n            <ThemeContext.Provider value={[theme , setTheme]}>\n                {props.children}\n            </ThemeContext.Provider>\n        </>\n    )\n\n}","import React from 'react'\nimport Switch from \"react-switch\";\n\nexport default function ThemeSwitch(props){\n    return (\n        <div className=\"themeSwitch\">\n            <Switch onChange={props.handleChange} checked={props.checked} />\n        </div>\n    )\n}","import React , {useContext} from 'react'\nimport ThemeContext from '../contexts/ThemeContext'\nimport ThemeSwitch from './ThemeSwitch'\n\nexport default function ThemeSwitchLogic(props){\n    const [theme , setTheme] = useContext(ThemeContext);\n    \n    const themeChangeHandler = (e) => {\n        const newTheme = theme === 'light' ? 'dark' : 'light'\n        setTheme(newTheme)\n    }\n\n    return <ThemeSwitch handleChange={themeChangeHandler} checked={theme === 'light'} />\n}","import React from 'react'\n\nexport default function University(props){\n    return (\n        <div className=\"university\">\n            <h3>{props.name}</h3>\n            <h4>{props.country}</h4>\n            <a className=\"university-link\" href={props.link}>Visist its website</a>\n        </div>\n    )\n}","import React , {useEffect , useState} from 'react'\nimport axios from 'axios'\nimport University from './University'\n\nexport default function Universities(props){\n    \n    const [filters , setFilters] = useState({name : '' , country : ''})\n\n    const [universities , setUniversities] = useState([])\n\n    const [tokens , setTokens] = useState([])\n    \n\n    useEffect(_ => {\n\n        const fetchData = async () => {\n            const CancelToken = axios.CancelToken;\n            const source = CancelToken.source();\n            const url = `http://universities.hipolabs.com/search?name=${filters.name}&country=${filters.country}`\n            setTokens([...tokens , source])\n            return await axios.get(url , {cancelToken : source.token})\n        }\n\n\n        async function iifi(){\n            tokens.forEach(item => item.cancel())\n            setTokens([])\n            const universities = (await fetchData()).data;\n            console.log(universities)\n            setUniversities(universities)\n        }\n\n        iifi()\n\n    } , [filters , setFilters])\n\n    \n\n    return (\n        <>\n            <div className=\"universities\">\n                <div className=\"university-filter\">\n                    <div className=\"filters\">\n                        <input type=\"text\" placeholder=\"name\" id=\"filter-name\" value={filters.name} onChange={e => setFilters({...filters , name: e.target.value})}/>\n                        <input type=\"text\" placeholder=\"Country\" id=\"filter-country\" value={filters.country} onChange={e => setFilters({...filters , country: e.target.value})}/>\n                    </div>\n                </div>\n                <div className=\"universities-list\">\n                    {universities.map(item => <University name={item.name} country={item.country} link={item.web_pages[0]} />)}\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport './App.css';\nimport MainPage from './components/MainPage'\nimport { Switch , BrowserRouter as Router , Route , Link } from 'react-router-dom'\nimport ThemeContextProvider from './components/ThemeContextProvider'\nimport ThemeSwitchLogic from './components/ThemeSwitchLogic'\nimport Universities from './components/Universities'\n\n\nfunction App(props) {\n  return (\n        <>\n        <ThemeContextProvider>\n        <ThemeSwitchLogic />\n          <Router>\n              <nav>\n                <ul>\n                  <li>\n                    <Link className=\"navLink\" to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link className=\"navLink\" to=\"/about\">About</Link>\n                  </li>\n                  <li>\n                    <Link className=\"navLink\" to=\"/uni\">Universities</Link>\n                  </li>\n                </ul>\n              </nav>\n              <Switch>\n                  <Route path=\"/\" exact>\n                      <MainPage />\n                  </Route>\n                  <Route path=\"/about\" exact>\n                      <h1>About TodoMatic</h1>\n                  </Route>\n                  <Route path=\"/uni\" exact>\n                    <Universities />\n                  </Route>\n              </Switch>\n          </Router> \n      </ThemeContextProvider>\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}